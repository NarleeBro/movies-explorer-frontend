{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\linar\\\\praktikumLenovo\\\\diplom\\\\movies-explorer-frontend\\\\src\\\\components\\\\Movies\\\\MoviesCardList\\\\MoviesCardList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"./MoviesCardList.css\";\nimport MoviesCard from \"../MoviesCard/MoviesCard\";\nimport { MovieContext } from \"../../../contexts/MovieContext\";\nimport { VisibleRowsContext } from \"../../../contexts/VisibleRowsContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst movieCardStartColumns = () => {\n  if (window.innerWidth >= 1200) return 3;\n  if (window.innerWidth >= 700) return 2;\n  return 1;\n};\n\nfunction MoviesCardList(_ref) {\n  _s();\n\n  let {\n    cards\n  } = _ref;\n  const {\n    savedMovies,\n    addMovie,\n    deleteMovie\n  } = useContext(MovieContext);\n  const {\n    addRows,\n    getRows\n  } = useContext(VisibleRowsContext);\n  const startVisibleRows = getRows();\n  const [columns, setColumns] = useState(movieCardStartColumns());\n  const [cardCount, setCardCount] = useState(startVisibleRows * columns);\n\n  const calColumns = cards => {\n    const newColumns = movieCardStartColumns();\n    setColumns(newColumns);\n    const requiredMovieCardCount = newColumns * startVisibleRows;\n\n    if (cards.length < requiredMovieCardCount) {\n      setCardCount(cards.length);\n    } else {\n      setCardCount(requiredMovieCardCount);\n    }\n  };\n\n  useEffect(() => {\n    calColumns({\n      cards\n    });\n    window.addEventListener(\"resize\", calColumns);\n    return () => {\n      window.removeEventListener(\"resize\", calColumns);\n    };\n  }, []);\n\n  const loadMoreCards = () => {\n    setCardCount(cardCount + columns);\n    addRows();\n  };\n\n  const visibleCards = cards.slice(0, cardCount);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: `movies-card-list ${cardCount < cards.length ? \"\" : \"movies-card-list_padding\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"movies-card-list__container\",\n      children: visibleCards.map((movie, index) => /*#__PURE__*/_jsxDEV(MoviesCard, {\n        title: movie.title,\n        duration: movie.duration,\n        backdrop: movie.backdrop,\n        isSaved: savedMovies.some(savedMovie => savedMovie.title === movie.title),\n        onAddToSaved: addMovie,\n        onRemoveFromSaved: deleteMovie\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), cardCount < cards.length && /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"movies-card-list__button link\",\n      onClick: loadMoreCards,\n      children: \"\\u0415\\u0449\\u0451\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoviesCardList, \"xAgHIp+/Julg7mFHtYPeZQGbL9Y=\");\n\n_c = MoviesCardList;\nexport default MoviesCardList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesCardList\");","map":{"version":3,"names":["React","useState","useEffect","useContext","MoviesCard","MovieContext","VisibleRowsContext","movieCardStartColumns","window","innerWidth","MoviesCardList","cards","savedMovies","addMovie","deleteMovie","addRows","getRows","startVisibleRows","columns","setColumns","cardCount","setCardCount","calColumns","newColumns","requiredMovieCardCount","length","addEventListener","removeEventListener","loadMoreCards","visibleCards","slice","map","movie","index","title","duration","backdrop","some","savedMovie"],"sources":["C:/Users/linar/praktikumLenovo/diplom/movies-explorer-frontend/src/components/Movies/MoviesCardList/MoviesCardList.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\n\nimport \"./MoviesCardList.css\";\nimport MoviesCard from \"../MoviesCard/MoviesCard\";\nimport { MovieContext } from \"../../../contexts/MovieContext\";\nimport { VisibleRowsContext } from \"../../../contexts/VisibleRowsContext\";\n\nconst movieCardStartColumns = () => {\n  if (window.innerWidth >= 1200) return 3;\n  if (window.innerWidth >= 700) return 2;\n  return 1;\n};\n\nfunction MoviesCardList({ cards }) {\n  const { savedMovies, addMovie, deleteMovie } = useContext(MovieContext);\n  const { addRows, getRows } = useContext(VisibleRowsContext);\n  const startVisibleRows = getRows();\n  const [columns, setColumns] = useState(movieCardStartColumns());\n  const [cardCount, setCardCount] = useState(startVisibleRows * columns);\n\n  const calColumns = (cards) => {\n    const newColumns = movieCardStartColumns();\n    setColumns(newColumns);\n    const requiredMovieCardCount = newColumns * startVisibleRows;\n    if (cards.length < requiredMovieCardCount) {\n      setCardCount(cards.length);\n    } else {\n      setCardCount(requiredMovieCardCount);\n    }\n  };\n\n  useEffect(() => {\n    calColumns({ cards });\n    window.addEventListener(\"resize\", calColumns);\n    return () => {\n      window.removeEventListener(\"resize\", calColumns);\n    };\n  }, []);\n\n  const loadMoreCards = () => {\n    setCardCount(cardCount + columns);\n    addRows();\n  };\n\n  const visibleCards = cards.slice(0, cardCount);\n\n  return (\n    <section\n      className={`movies-card-list ${cardCount < cards.length ? \"\" : \"movies-card-list_padding\"\n        }`}\n    >\n      <ul className=\"movies-card-list__container\">\n        {visibleCards.map((movie, index) => (\n          <MoviesCard\n            key={index}\n            title={movie.title}\n            duration={movie.duration}\n            backdrop={movie.backdrop}\n            isSaved={savedMovies.some(\n              (savedMovie) => savedMovie.title === movie.title\n            )}\n            onAddToSaved={addMovie}\n            onRemoveFromSaved={deleteMovie}\n          />\n        ))}\n      </ul>\n      {cardCount < cards.length && (\n        <button\n          type=\"button\"\n          className=\"movies-card-list__button link\"\n          onClick={loadMoreCards}\n        >\n          Ещё\n        </button>\n      )}\n    </section>\n  );\n}\n\nexport default MoviesCardList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}