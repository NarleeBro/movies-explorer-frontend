{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\linar\\\\praktikumLenovo\\\\diplom\\\\movies-explorer-frontend\\\\src\\\\contexts\\\\VisibleRowsContext.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const VisibleRowsContext = /*#__PURE__*/createContext();\nexport const VisibleRowsProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [visibleRows, setVisibleRows] = useState(2);\n  const [visibleRowsSaved, setVisibleRowsSaved] = useState(2);\n  const location = useLocation();\n  const [prevPathname, setPrevPathname] = useState(\"\");\n  useEffect(() => {\n    const pathname = location.pathname;\n\n    if ((prevPathname === \"/movies\" || prevPathname === \"\" || prevPathname === \"/saved-movies\") && (pathname === \"/movies\" || pathname === \"/saved-movies\")) {} else {\n      resetRows();\n    }\n\n    setPrevPathname(pathname);\n  }, [location.pathname]);\n\n  const addRows = () => {\n    const pathname = location.pathname;\n    if (pathname === \"/movies\") setVisibleRows(visibleRows + 1);else {\n      setVisibleRowsSaved(visibleRowsSaved + 1);\n    }\n  };\n\n  const getRows = () => {\n    const pathname = location.pathname;\n    if (pathname === \"/movies\") return visibleRows;else {\n      return visibleRowsSaved;\n    }\n  };\n\n  const resetRows = () => {\n    setVisibleRows(2);\n    setVisibleRowsSaved(2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(VisibleRowsContext.Provider, {\n    value: {\n      getRows,\n      addRows,\n      visibleRows,\n      visibleRowsSaved\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(VisibleRowsProvider, \"R08H/MbYTWCV0HghYsQLHT+d8Ko=\", false, function () {\n  return [useLocation];\n});\n\n_c = VisibleRowsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"VisibleRowsProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","useLocation","VisibleRowsContext","VisibleRowsProvider","children","visibleRows","setVisibleRows","visibleRowsSaved","setVisibleRowsSaved","location","prevPathname","setPrevPathname","pathname","resetRows","addRows","getRows"],"sources":["C:/Users/linar/praktikumLenovo/diplom/movies-explorer-frontend/src/contexts/VisibleRowsContext.jsx"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport const VisibleRowsContext = createContext();\r\n\r\nexport const VisibleRowsProvider = ({ children }) => {\r\n  const [visibleRows, setVisibleRows] = useState(2);\r\n  const [visibleRowsSaved, setVisibleRowsSaved] = useState(2);\r\n  const location = useLocation();\r\n  const [prevPathname, setPrevPathname] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname;\r\n    if (\r\n      (prevPathname === \"/movies\" ||\r\n        prevPathname === \"\" ||\r\n        prevPathname === \"/saved-movies\") &&\r\n      (pathname === \"/movies\" || pathname === \"/saved-movies\")\r\n    ) {\r\n    } else {\r\n      resetRows();\r\n    }\r\n    setPrevPathname(pathname);\r\n  }, [location.pathname]);\r\n\r\n  const addRows = () => {\r\n    const pathname = location.pathname;\r\n    if (pathname === \"/movies\") setVisibleRows(visibleRows + 1);\r\n    else {\r\n      setVisibleRowsSaved(visibleRowsSaved + 1);\r\n    }\r\n  };\r\n\r\n  const getRows = () => {\r\n    const pathname = location.pathname;\r\n    if (pathname === \"/movies\") return visibleRows;\r\n    else {\r\n      return visibleRowsSaved;\r\n    }\r\n  };\r\n\r\n  const resetRows = () => {\r\n    setVisibleRows(2);\r\n    setVisibleRowsSaved(2);\r\n  };\r\n\r\n  return (\r\n    <VisibleRowsContext.Provider\r\n      value={{ getRows, addRows, visibleRows, visibleRowsSaved }}\r\n    >\r\n      {children}\r\n    </VisibleRowsContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,OAAO,MAAMC,kBAAkB,gBAAGJ,aAAa,EAAxC;AAEP,OAAO,MAAMK,mBAAmB,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACnD,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACQ,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC,CAAD,CAAxD;EACA,MAAMU,QAAQ,GAAGR,WAAW,EAA5B;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,EAAD,CAAhD;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMY,QAAQ,GAAGH,QAAQ,CAACG,QAA1B;;IACA,IACE,CAACF,YAAY,KAAK,SAAjB,IACCA,YAAY,KAAK,EADlB,IAECA,YAAY,KAAK,eAFnB,MAGCE,QAAQ,KAAK,SAAb,IAA0BA,QAAQ,KAAK,eAHxC,CADF,EAKE,CACD,CAND,MAMO;MACLC,SAAS;IACV;;IACDF,eAAe,CAACC,QAAD,CAAf;EACD,CAZQ,EAYN,CAACH,QAAQ,CAACG,QAAV,CAZM,CAAT;;EAcA,MAAME,OAAO,GAAG,MAAM;IACpB,MAAMF,QAAQ,GAAGH,QAAQ,CAACG,QAA1B;IACA,IAAIA,QAAQ,KAAK,SAAjB,EAA4BN,cAAc,CAACD,WAAW,GAAG,CAAf,CAAd,CAA5B,KACK;MACHG,mBAAmB,CAACD,gBAAgB,GAAG,CAApB,CAAnB;IACD;EACF,CAND;;EAQA,MAAMQ,OAAO,GAAG,MAAM;IACpB,MAAMH,QAAQ,GAAGH,QAAQ,CAACG,QAA1B;IACA,IAAIA,QAAQ,KAAK,SAAjB,EAA4B,OAAOP,WAAP,CAA5B,KACK;MACH,OAAOE,gBAAP;IACD;EACF,CAND;;EAQA,MAAMM,SAAS,GAAG,MAAM;IACtBP,cAAc,CAAC,CAAD,CAAd;IACAE,mBAAmB,CAAC,CAAD,CAAnB;EACD,CAHD;;EAKA,oBACE,QAAC,kBAAD,CAAoB,QAApB;IACE,KAAK,EAAE;MAAEO,OAAF;MAAWD,OAAX;MAAoBT,WAApB;MAAiCE;IAAjC,CADT;IAAA,UAGGH;EAHH;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAhDM;;GAAMD,mB;UAGMF,W;;;KAHNE,mB"},"metadata":{},"sourceType":"module"}