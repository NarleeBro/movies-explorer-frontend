[{"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\index.js":"1","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\contexts\\PreloaderContext.jsx":"2","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\contexts\\MovieContext.jsx":"3","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\contexts\\SearchContext.jsx":"4","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\contexts\\CurrentUserContext.jsx":"5","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\App\\App.jsx":"6","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\SavedMovies\\SavedMovies.js":"7","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\utils\\ApiMain.jsx":"8","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\utils\\MovieApi.jsx":"9","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\contexts\\VisibleRowsContext.jsx":"10","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\Main.jsx":"11","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\Movies.jsx":"12","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\NotFound\\NotFound.jsx":"13","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\ProtectedRoute\\ProtectedRoute.jsx":"14","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\Register\\Register.jsx":"15","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Header\\Menu\\Menu.jsx":"16","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\Profile\\Profile.jsx":"17","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\Login\\Login.jsx":"18","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Header\\Header.jsx":"19","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Footer\\Footer.jsx":"20","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\SearchForm\\SearchForm.jsx":"21","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\MoviesCardList\\MoviesCardList.jsx":"22","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\NavTab\\NavTab.jsx":"23","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\Techs\\Techs.jsx":"24","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\Landing\\Landing.jsx":"25","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\AboutProject\\AboutProject.jsx":"26","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\utils\\Constants.jsx":"27","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\Preloader\\Preloader.jsx":"28","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\AboutMe\\AboutMe.jsx":"29","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\FormNavigation\\FormNavigation.jsx":"30","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\InputField\\InputField.jsx":"31","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\SubmitButton\\SubmitButton.jsx":"32","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Header\\ProfileButton\\ProfileButton.jsx":"33","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\hooks\\usePopupClose.jsx":"34","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Header\\HeaderMain\\HeaderMain.jsx":"35","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\SearchForm\\Checkboxfilter\\Checkboxfilter.jsx":"36","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\MoviesCard\\MoviesCard.jsx":"37","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Header\\SectionHeader\\SectionHeader.jsx":"38","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\Portfolio\\Portfolio.jsx":"39"},{"size":850,"mtime":1699958821000,"results":"40","hashOfConfig":"41"},{"size":710,"mtime":1699958821000,"results":"42","hashOfConfig":"41"},{"size":5696,"mtime":1699992460000,"results":"43","hashOfConfig":"41"},{"size":1918,"mtime":1699977116000,"results":"44","hashOfConfig":"41"},{"size":747,"mtime":1699958821000,"results":"45","hashOfConfig":"41"},{"size":5281,"mtime":1699958821000,"results":"46","hashOfConfig":"41"},{"size":2504,"mtime":1699958821000,"results":"47","hashOfConfig":"41"},{"size":3574,"mtime":1699958821000,"results":"48","hashOfConfig":"41"},{"size":478,"mtime":1699958821000,"results":"49","hashOfConfig":"41"},{"size":2602,"mtime":1699993326000,"results":"50","hashOfConfig":"41"},{"size":747,"mtime":1699958821000,"results":"51","hashOfConfig":"41"},{"size":3010,"mtime":1699958821000,"results":"52","hashOfConfig":"41"},{"size":742,"mtime":1699982955000,"results":"53","hashOfConfig":"41"},{"size":348,"mtime":1699980489000,"results":"54","hashOfConfig":"41"},{"size":7349,"mtime":1699963360000,"results":"55","hashOfConfig":"41"},{"size":2036,"mtime":1699988365000,"results":"56","hashOfConfig":"41"},{"size":7551,"mtime":1699966166000,"results":"57","hashOfConfig":"41"},{"size":5787,"mtime":1699963960000,"results":"58","hashOfConfig":"41"},{"size":2934,"mtime":1700044879000,"results":"59","hashOfConfig":"41"},{"size":1019,"mtime":1699958325000,"results":"60","hashOfConfig":"41"},{"size":3252,"mtime":1699977553000,"results":"61","hashOfConfig":"41"},{"size":2603,"mtime":1699993535000,"results":"62","hashOfConfig":"41"},{"size":635,"mtime":1699958821000,"results":"63","hashOfConfig":"41"},{"size":1019,"mtime":1699958821000,"results":"64","hashOfConfig":"41"},{"size":314,"mtime":1699958325000,"results":"65","hashOfConfig":"41"},{"size":1988,"mtime":1699958325000,"results":"66","hashOfConfig":"41"},{"size":110,"mtime":1699958821000,"results":"67","hashOfConfig":"41"},{"size":320,"mtime":1699958325000,"results":"68","hashOfConfig":"41"},{"size":1777,"mtime":1699958325000,"results":"69","hashOfConfig":"41"},{"size":430,"mtime":1699958325000,"results":"70","hashOfConfig":"41"},{"size":541,"mtime":1699958821000,"results":"71","hashOfConfig":"41"},{"size":459,"mtime":1699963029000,"results":"72","hashOfConfig":"41"},{"size":595,"mtime":1699985042000,"results":"73","hashOfConfig":"41"},{"size":710,"mtime":1699958325000,"results":"74","hashOfConfig":"41"},{"size":852,"mtime":1699987915000,"results":"75","hashOfConfig":"41"},{"size":523,"mtime":1699958325000,"results":"76","hashOfConfig":"41"},{"size":3084,"mtime":1700062477558,"results":"77","hashOfConfig":"41"},{"size":203,"mtime":1699958325000,"results":"78","hashOfConfig":"41"},{"size":1427,"mtime":1699958821000,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"1p0b2f1",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"83"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"83"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"83"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"83"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"83"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"83"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"83"},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"83"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"83"},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"201","messages":"202","suppressedMessages":"203","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"204"},{"filePath":"205","messages":"206","suppressedMessages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"208","messages":"209","suppressedMessages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\index.js",[],[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\contexts\\PreloaderContext.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\contexts\\MovieContext.jsx",["211"],[],"import { createContext, useState, useEffect } from \"react\";\r\nimport apiMain from \"../utils/ApiMain\";\r\nimport apiMovies from \"../utils/MovieApi\";\r\nexport const MovieContext = createContext();\r\nexport const MovieProvider = ({ children }) => {\r\n  const [savedMovies, setSavedMovies] = useState([]);\r\n  const [movies, setMovies] = useState([]);\r\n\r\n  const restartMoviesContext = () => {\r\n    setSavedMovies([]);\r\n    setMovies([]);\r\n  };\r\n\r\n  function saveSavedMovies() {\r\n    const savedMoviesLocalVer = JSON.parse(\r\n      localStorage.getItem(\"saved-movies\")\r\n    );\r\n    if (!savedMoviesLocalVer) {\r\n      apiMain\r\n        .getMovies()\r\n        .then((movieList) => {\r\n          const newMovies = movieList.map((movie) => ({\r\n            duration: movie.duration,\r\n            trailerLink: movie.trailerLink,\r\n            backdrop: movie.thumbnail,\r\n            movieId: movie.movieId,\r\n            title: movie.nameRU,\r\n            _id: movie._id,\r\n          }));\r\n          setSavedMovies(newMovies);\r\n          localStorage.setItem(\"saved-movies\", JSON.stringify(newMovies));\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Ошибкак при поиске фильма ${error}`);\r\n        });\r\n    } else {\r\n      setSavedMovies(savedMoviesLocalVer);\r\n    }\r\n  }\r\n\r\n  function downloudsMovies() {\r\n    const moviesLocalCopy =\r\n      JSON.parse(localStorage.getItem(\"sorted-beatfilm-movies\")) || [];\r\n    if (moviesLocalCopy.length === 0) {\r\n      const optionsLocalCopy = JSON.parse(\r\n        localStorage.getItem(\"options-beatfilm-movies\")\r\n      );\r\n      if (optionsLocalCopy) {\r\n        if (!JSON.parse(localStorage.getItem(\"beatfilm-movies\"))) {\r\n          apiMovies()\r\n            .then((data) => {\r\n              localStorage.setItem(\"beatfilm-movies\", JSON.stringify(data));\r\n              return true;\r\n            })\r\n            .catch((error) => {\r\n              setMovies(moviesLocalCopy);\r\n              return false;\r\n            });\r\n        } else {\r\n          return true;\r\n        }\r\n      } else {\r\n        setMovies(moviesLocalCopy);\r\n        return false;\r\n      }\r\n    } else {\r\n      setMovies(moviesLocalCopy);\r\n      return false;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSavedMovies([]);\r\n    setMovies([]);\r\n  }, []);\r\n\r\n\r\n  const addSavedMovie = (movieId) => {\r\n    Promise.resolve(localStorage.getItem(\"beatfilm-movies\"))\r\n      .then((moviesData) => JSON.parse(moviesData))\r\n      .then((mov) => {\r\n        const movie = mov.find((movie) => movie.id === movieId);\r\n        apiMain\r\n          .addMovie({\r\n            country: movie.country,\r\n            director: movie.director,\r\n            duration: movie.duration,\r\n            year: movie.year,\r\n            description: movie.description,\r\n            image: [\"https://api.nomoreparties.co\", movie.image.url].join(\"\"),\r\n            trailerLink: movie.trailerLink,\r\n            thumbnail: [\r\n              \"https://api.nomoreparties.co\",\r\n              movie.image.formats.thumbnail.url,\r\n            ].join(\"\"),\r\n            movieId: movie.id,\r\n            nameRU: movie.nameRU,\r\n            nameEN: movie.nameEN,\r\n          })\r\n          .then((addedMovie) => {\r\n            const updatedSavedMovies = [\r\n              ...savedMovies,\r\n              {\r\n                duration: addedMovie.duration,\r\n                trailerLink: addedMovie.trailerLink,\r\n                backdrop: addedMovie.thumbnail,\r\n                movieId: addedMovie.movieId,\r\n                title: addedMovie.nameRU,\r\n                _id: addedMovie._id,\r\n              },\r\n            ];\r\n            setSavedMovies(updatedSavedMovies);\r\n            localStorage.setItem(\r\n              \"saved-movies\",\r\n              JSON.stringify(updatedSavedMovies)\r\n            );\r\n          })\r\n          .catch((error) => console.error(`Ошибка сохранения фильма 1 ${error}`));\r\n      })\r\n      .catch((error) => {\r\n        console.error(`Ошибка сохранения фильма 2 ${error}`);\r\n      })\r\n  };\r\n\r\n  const addMovieList = (moviesList) => {\r\n    let newMoviesList = [];\r\n    moviesList.forEach((movie) => {\r\n      newMoviesList.push({\r\n        duration: movie.duration,\r\n        trailerLink: movie.trailerLink,\r\n        backdrop: [\r\n          \"https://api.nomoreparties.co\",\r\n          movie.image.formats.thumbnail.url,\r\n        ].join(\"\"),\r\n        movieId: movie.id,\r\n        title: movie.nameRU,\r\n      });\r\n    });\r\n    setMovies(newMoviesList);\r\n    localStorage.setItem(\r\n      \"sorted-beatfilm-movies\",\r\n      JSON.stringify(newMoviesList)\r\n    );\r\n  };\r\n  const addSavedMovieList = (savedMoviesList) => {\r\n    setSavedMovies(savedMoviesList);\r\n  };\r\n  const delSavedMovie = (movieId) => {\r\n    const index = savedMovies.findIndex(\r\n      (savedMovie) => savedMovie.movieId === movieId\r\n    );\r\n\r\n    apiMain\r\n      .delMovie(savedMovies[index]._id)\r\n      .then((response) => {\r\n        const updatedSavedMovies = savedMovies.filter(\r\n          (savedMovie, i) => i !== index\r\n        );\r\n        setSavedMovies(updatedSavedMovies);\r\n        localStorage.setItem(\r\n          \"saved-movies\",\r\n          JSON.stringify(updatedSavedMovies)\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.error(`Ошибка при удалении фильиа ${error}`);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <MovieContext.Provider\r\n      value={{\r\n        restartMoviesContext,\r\n        savedMovies,\r\n        addSavedMovie,\r\n        delSavedMovie,\r\n        addMovieList,\r\n        downloudsMovies,\r\n        saveSavedMovies,\r\n        addSavedMovieList,\r\n        movies,\r\n        savedMovies,\r\n      }}\r\n    >\r\n      {children}\r\n    </MovieContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\contexts\\SearchContext.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\contexts\\CurrentUserContext.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\App\\App.jsx",["212"],[],"import \"./App.css\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport { VisibleRowsProvider } from \"../../contexts/VisibleRowsContext\";\r\nimport { MovieContext } from \"../../contexts/MovieContext\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext\";\r\nimport { SearchContext } from \"../../contexts/SearchContext\";\r\n\r\nimport Menu from \"../Header/Menu/Menu\";\r\nimport Main from \"../Main/Main\";\r\nimport Movies from \"../Movies/Movies\";\r\nimport SavedMovies from \"../SavedMovies/SavedMovies\";\r\nimport Register from \"../Auth/Register/Register\";\r\nimport Login from \"../Auth/Login/Login\";\r\nimport Profile from \"../Auth/Profile/Profile\";\r\nimport NotFound from \"../NotFound/NotFound\";\r\nimport ProtectedRouteElement from \"../ProtectedRoute/ProtectedRoute\";\r\nimport apiMain from \"../../utils/ApiMain\";\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(false);\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const { addMovieList, addSavedMovieList } = useContext(MovieContext);\r\n  const { searchTermMovies, searchTermSavedMovies } = useContext(SearchContext);\r\n  const { setCurrentUser } = useContext(CurrentUserContext);\r\n\r\n  useEffect(() => {\r\n    handleCheckToken();\r\n  }, []);\r\n\r\n  const closeAllPopup = () => {\r\n    setIsMenuOpen(false);\r\n  };\r\n\r\n  const handleOpenMenu = () => {\r\n    setIsMenuOpen(true);\r\n  };\r\n\r\n  const handleSetLoggedIn = (value) => {\r\n    setLoggedIn(value);\r\n  };\r\n\r\n  function handleCheckToken() {\r\n    const jwt = localStorage.getItem(\"token\");\r\n\r\n    if (jwt) {\r\n      apiMain\r\n        .getUserInfo(jwt)\r\n        .then((userData) => {\r\n          setCurrentUser(userData);\r\n          setLoggedIn(true);\r\n        })\r\n        .catch((error) => {\r\n          console.error(`Ошибка при загрузке начальных данных ${error}`);\r\n        })\r\n        .finally(() => { });\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  }\r\n\r\n  function findMovieByTitle(storedMovies) {\r\n    let sortedMovies = storedMovies.filter((movie) => {\r\n      if (movie.title) {\r\n        return movie.title.toLowerCase().includes(searchTermSavedMovies.toLowerCase());\r\n      }\r\n      if (movie.nameRU) {\r\n        return movie.nameRU.toLowerCase().includes(searchTermMovies.toLowerCase());\r\n      }\r\n      return null;\r\n    });\r\n    return sortedMovies;\r\n  }\r\n\r\n  function findMovieByDuration(storedMovies) {\r\n    let sortedMovies = storedMovies.filter(\r\n      (movie) => movie.duration <= 40\r\n    );\r\n    return sortedMovies;\r\n  }\r\n\r\n  function searchFilter(isCheckedCheckboxfilter, movieListName) {\r\n    const storedMovies = JSON.parse(localStorage.getItem(movieListName));\r\n    if (!storedMovies) {\r\n      return;\r\n    }\r\n    let sortedMovies;\r\n    sortedMovies = findMovieByTitle(storedMovies);\r\n    if (isCheckedCheckboxfilter) {\r\n      sortedMovies = findMovieByDuration(sortedMovies);\r\n    }\r\n    if (sortedMovies.length === 0) {\r\n      setErrorMessage(\"Ничего не нашел. Введите что-нибудь\");\r\n    } else {\r\n      setErrorMessage(\"\");\r\n    }\r\n    if (movieListName === \"beatfilm-movies\")\r\n      addMovieList(sortedMovies);\r\n    if (movieListName === \"saved-movies\") {\r\n      addSavedMovieList(sortedMovies);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <VisibleRowsProvider>\r\n        <Routes>\r\n          <Route\r\n            path=\"/\"\r\n            element={<Main isLoggedIn={loggedIn} onMenuButtonClick={handleOpenMenu} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/signin\"\r\n            element={\r\n              <Login loggedIn={loggedIn} setLoggedIn={handleSetLoggedIn} />\r\n            }\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/signup\"\r\n            element={<Register loggedIn={loggedIn} setLoggedIn={handleSetLoggedIn} />\r\n            }\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/profile\"\r\n            element={<ProtectedRouteElement\r\n              element={Profile}\r\n              loggedIn={loggedIn}\r\n              onMenuButtonClick={handleOpenMenu}\r\n              setLoggedIn={handleSetLoggedIn} />\r\n            }\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/movies\"\r\n            element={<ProtectedRouteElement\r\n              element={Movies}\r\n              onMenuButtonClick={handleOpenMenu}\r\n              errorMessage={errorMessage}\r\n              setErrorMessage={setErrorMessage}\r\n              loggedIn={loggedIn}\r\n              searchFilter={searchFilter} />\r\n            }\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/saved-movies\"\r\n            element={<ProtectedRouteElement\r\n              element={SavedMovies}\r\n              loggedIn={loggedIn}\r\n              onMenuButtonClick={handleOpenMenu}\r\n              errorMessage={errorMessage}\r\n              setErrorMessage={setErrorMessage}\r\n              searchFilter={searchFilter} />\r\n            }\r\n          />\r\n          <Route path=\"*\" element={<NotFound isLoggedIn={loggedIn} />} />\r\n        </Routes>\r\n        <Menu isOpen={isMenuOpen} onClose={closeAllPopup} />\r\n      </VisibleRowsProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\SavedMovies\\SavedMovies.js",["213"],[],"import React, { useEffect, useContext } from \"react\";\r\n\r\nimport { MovieContext } from \"../../contexts/MovieContext\";\r\nimport \"./SavedMovies.css\";\r\nimport MoviesCardList from \"../Movies/MoviesCardList/MoviesCardList\";\r\nimport SearchForm from \"../Movies/SearchForm/SearchForm\";\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport { PreloaderContext } from \"../../contexts/PreloaderContext\";\r\nimport { SearchContext } from \"../../contexts/SearchContext\";\r\n\r\nfunction SavedMovies({\r\n  onRowsCounter,\r\n  rows,\r\n  onMenuButtonClick,\r\n  errorMessage,\r\n  setErrorMessage,\r\n  searchFilter,\r\n}) {\r\n  const { savedMovies, delSavedMovie, saveSavedMovies } =\r\n    useContext(MovieContext);\r\n  const { searchTermSavedMovies, setSearchTermSavedMovies } =\r\n    useContext(SearchContext);\r\n  const { checkboxfilterModeSaved, setCheckboxfilterModeSaved } =\r\n    useContext(SearchContext);\r\n  const { setStatePreloader } = useContext(PreloaderContext);\r\n\r\n  useEffect(() => {\r\n    saveSavedMovies();\r\n  }, []);\r\n\r\n  function handleSearch() {\r\n    const optionsData = {\r\n      searchQuery: searchTermSavedMovies,\r\n      checkboxfilterMode: checkboxfilterModeSaved,\r\n    };\r\n\r\n    localStorage.setItem(\"options-saved-movies\", JSON.stringify(optionsData));\r\n\r\n    setStatePreloader(true);\r\n\r\n    try {\r\n      searchFilter(checkboxfilterModeSaved, \"saved-movies\");\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    } finally {\r\n      setStatePreloader(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page__container\">\r\n      <Header onClickMenuButton={onMenuButtonClick}></Header>\r\n      <main className=\"content\">\r\n        <section className=\"saved-movies\">\r\n          <SearchForm\r\n            onSearch={handleSearch}\r\n            errorMessage={errorMessage}\r\n            setErrorMessage={setErrorMessage}\r\n            setCheckboxfilterMode={setCheckboxfilterModeSaved}\r\n            checkboxfilterMode={checkboxfilterModeSaved}\r\n            setSearchQuery={setSearchTermSavedMovies}\r\n            searchQuery={searchTermSavedMovies}\r\n            localStorageName={\"options-saved-movies\"}\r\n            isSaved={true}\r\n          />\r\n          <MoviesCardList\r\n            movies={savedMovies} \r\n            rows={rows}\r\n            onRowsCounter={onRowsCounter}\r\n            onRemoveFromSaved={delSavedMovie}\r\n            loadMoreButtomMove={false}\r\n          />\r\n        </section>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SavedMovies;\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\utils\\ApiMain.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\utils\\MovieApi.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\contexts\\VisibleRowsContext.jsx",["214"],[],"import { createContext, useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport const VisibleRowsContext = createContext();\r\nexport const VisibleRowsProvider = ({ children }) => {\r\n  const [visibleRows, setVisibleRows] = useState(0);\r\n  const [visibleRowsSaved, setVisibleRowsSaved] = useState(0);\r\n  const [prevPathname, setPrevPathname] = useState(\"\");\r\n  const [cardCount, setCardCount] = useState(0);\r\n  const location = useLocation();\r\n\r\n  const resetVisibleRowsContext = () => {\r\n    // setVisibleRows(0);\r\n    // setVisibleRowsSaved(0);\r\n    // setCardCount(0);\r\n    // setPrevPathname(\"\");\r\n    const { rows } = movieCardStartColumns();\r\n    setVisibleRows(rows);\r\n    setVisibleRowsSaved(rows);\r\n    setCardCount(rows * movieCardStartColumns().columns);\r\n    setPrevPathname(\"\");\r\n  };\r\n\r\n  const movieCardStartColumns = () => {\r\n    if (window.innerWidth >= 1200) return { columns: 3, rows: 4 };\r\n    if (window.innerWidth >= 584) return { columns: 2, rows: 4 };\r\n    return { columns: 1, rows: 5 };\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pathname = location.pathname;\r\n    if (\r\n      (prevPathname === \"/movies\" ||\r\n        prevPathname === \"\" ||\r\n        prevPathname === \"/saved-movies\") &&\r\n      (pathname === \"/movies\" || pathname === \"/saved-movies\")\r\n    ) {\r\n    } else {\r\n      resetRows();\r\n    }\r\n    setPrevPathname(pathname);\r\n  }, [location.pathname, prevPathname]);\r\n\r\n  useEffect(() => {\r\n    const { columns, rows } = movieCardStartColumns();\r\n    const requiredCardCount = columns * rows;\r\n    setCardCount(requiredCardCount);\r\n    setVisibleRows(rows);\r\n    setVisibleRowsSaved(rows);\r\n  }, []);\r\n\r\n  const addRows = () => {\r\n    const pathname = location.pathname;\r\n    if (pathname === \"/movies\" || pathname === \"/saved-movies\") setVisibleRows((prevRows) => prevRows + 1);\r\n    else {\r\n      setVisibleRowsSaved((prevRows) => prevRows + 1);\r\n    }\r\n  };\r\n\r\n  const getRows = () => {\r\n    const pathname = location.pathname;\r\n    if (pathname === \"/movies\" || pathname === \"/saved-movies\") return visibleRows;\r\n    else {\r\n      return visibleRowsSaved;\r\n    }\r\n  };\r\n\r\n  const resetRows = () => {\r\n    setVisibleRows(2);\r\n    setVisibleRowsSaved(2);\r\n  };\r\n\r\n  return (\r\n    <VisibleRowsContext.Provider\r\n      value={{\r\n        getRows,\r\n        addRows,\r\n        resetVisibleRowsContext,\r\n        visibleRows,\r\n        visibleRowsSaved,\r\n        cardCount,\r\n        setCardCount,\r\n        movieCardStartColumns,\r\n        resetVisibleRowsContext\r\n      }}\r\n    >\r\n      {children}\r\n    </VisibleRowsContext.Provider>\r\n  );\r\n};\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\Main.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\Movies.jsx",["215"],[],"import React, { useContext, useEffect } from \"react\";\r\n\r\nimport \"./Movies.css\";\r\nimport SearchForm from \"./SearchForm/SearchForm\";\r\nimport MoviesCardList from \"./MoviesCardList/MoviesCardList\";\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Preloader from \"../Movies/Preloader/Preloader\";\r\nimport { PreloaderContext } from \"../../contexts/PreloaderContext\";\r\nimport { MovieContext } from \"../../contexts/MovieContext\";\r\nimport { SearchContext } from \"../../contexts/SearchContext\";\r\nimport apiMovies from \"../../utils/MovieApi\";\r\n\r\nfunction Movies({ onMenuButtonClick, searchFilter, errorMessage, setErrorMessage }) {\r\n  const { isActivePreloader, setStatePreloader } = useContext(PreloaderContext);\r\n  const { movies, downloudsMovies } = useContext(MovieContext);\r\n  const { searchTermMovies, setSearchTermMovies } = useContext(SearchContext);\r\n  const { checkboxfilterMode, setCheckboxfilterMode } = useContext(SearchContext);\r\n\r\n  useEffect(() => {\r\n    if (downloudsMovies()) {\r\n      handleSearch();\r\n    }\r\n  }, []);\r\n\r\n  async function handleSearch() {\r\n    const optionsData = {\r\n      searchQuery: searchTermMovies,\r\n      checkboxfilterMode: checkboxfilterMode,\r\n    };\r\n\r\n    localStorage.setItem(\r\n      \"options-beatfilm-movies\",\r\n      JSON.stringify(optionsData)\r\n    );\r\n\r\n    const storedMovies = JSON.parse(localStorage.getItem(\"beatfilm-movies\"));\r\n\r\n    setStatePreloader(true);\r\n\r\n    if (!storedMovies) {\r\n      apiMovies()\r\n        .then((data) => {\r\n          localStorage.setItem(\"beatfilm-movies\", JSON.stringify(data));\r\n          searchFilter(checkboxfilterMode, \"beatfilm-movies\");\r\n        })\r\n        .catch((error) => {\r\n          setErrorMessage(error.message);\r\n        })\r\n        .finally(() => {\r\n          setStatePreloader(false);\r\n        });\r\n    } else {\r\n      try {\r\n        searchFilter(checkboxfilterMode, \"beatfilm-movies\");\r\n      } catch (error) {\r\n        setErrorMessage(error.message);\r\n      } finally {\r\n        setStatePreloader(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"page__container\">\r\n      <Header onClickMenuButton={onMenuButtonClick}></Header>\r\n      <main className=\"content\">\r\n        <section className=\"movies\">\r\n          <SearchForm\r\n            onSearch={handleSearch}\r\n            errorMessage={errorMessage}\r\n            setErrorMessage={setErrorMessage}\r\n            setCheckboxfilterMode={setCheckboxfilterMode}\r\n            checkboxfilterMode={checkboxfilterMode}\r\n            setSearchQuery={setSearchTermMovies}\r\n            searchQuery={searchTermMovies}\r\n            localStorageName={\"options-beatfilm-movies\"}\r\n            isSaved={false} />\r\n          {!isActivePreloader && <MoviesCardList\r\n            movies={movies}\r\n            isActive={isActivePreloader}\r\n            loadMoreButtomMove={true}\r\n          />}\r\n          {isActivePreloader && <Preloader />}\r\n        </section>\r\n      </main>\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Movies;\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\NotFound\\NotFound.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\ProtectedRoute\\ProtectedRoute.jsx",["216"],[],"import React, { useContext } from 'react';\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nconst ProtectedRouteElement = ({ element: Component, ...props  }) => {\r\n\r\n  const isAuth = !!localStorage.getItem('token');\r\n\r\n  return (\r\n    isAuth ? <Component {...props} /> : <Navigate to=\"/\" replace/>\r\n  )\r\n}\r\n\r\nexport default ProtectedRouteElement;\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\Register\\Register.jsx",["217","218","219"],[],"import { useState, useEffect, useContext, React } from \"react\"; //js\r\nimport { useNavigate } from \"react-router-dom\"; //js\r\nimport \"./Register.css\";\r\nimport InputField from \"../InputField/InputField\";\r\nimport SubmitButton from \"../SubmitButton/SubmitButton\";\r\nimport FormNavigation from \"../FormNavigation/FormNavigation\";\r\nimport Header from \"../../Header/Header\";\r\n\r\nimport Preloader from \"../../Movies/Preloader/Preloader\";\r\nimport { EMAIL_REGEX } from \"../../../utils/Constants\";\r\nimport { PreloaderContext } from \"../../../contexts/PreloaderContext\";\r\nimport { CurrentUserContext } from \"../../../contexts/CurrentUserContext\";\r\nimport apiMain from \"../../../utils/ApiMain\";\r\n//js\r\nfunction Register(props) {\r\n  const navigate = useNavigate();\r\n  const { setLoggedIn } = props;\r\n  const [dataForm, setDataForm] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isActiveInputField, setIsActiveInputField] = useState(true);\r\n  const [errorMessages, setErrorMessages] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [sentDataForm, setSentDataForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errorResMessage, setErrorResMessage] = useState(\"\");\r\n  const [isActiveSubmitButton, setIsActiveSubmitButton] = useState(false);\r\n  const { isActivePreloader, setStatePreloader } = useContext(PreloaderContext);\r\n  const { setCurrentUser } = useContext(CurrentUserContext);\r\n\r\n  const [isSubmitBtnDisabled, setIsSubmitBtnDisabled] = useState(true); \r\n\r\n  function handleSubmitRegister(event) {\r\n    event.preventDefault();\r\n    setIsActiveInputField(false);\r\n    registerUser(dataForm);\r\n    setIsActiveInputField(true);\r\n  }\r\n\r\n  function checkActivateSubmitButton() {\r\n    const hasEmptyField = Object.values(dataForm).some((value) => value.length === 0);\r\n    const hasError = Object.values(errorMessages).some(\r\n      (message) => message !== \"\"\r\n    );\r\n    // const hasDataChanged = (dataForm.email !== sentDataForm.email || dataForm.name !== sentDataForm.name);\r\n    // setIsActiveSubmitButton(!hasEmptyField && !hasError && hasDataChanged);\r\n    if (!hasEmptyField && !hasError && errorResMessage.length === 0) {\r\n      setIsSubmitBtnDisabled(false);\r\n    } else {\r\n      setIsSubmitBtnDisabled(true);\r\n    }\r\n  }\r\n\r\n  function validateFormFields(formElement) {\r\n    let errorMessage = \"\";\r\n    if (formElement.id === \"email\") {\r\n      // Валидность мыла\r\n      const emailRegex = EMAIL_REGEX;\r\n      if (!emailRegex.test(formElement.value)) {\r\n        errorMessage = \"Указан некорректный e-mail\";\r\n      }\r\n    } else {\r\n      if (!formElement.validity.valid) {\r\n        errorMessage = formElement.validationMessage.split(\".\")[0];\r\n      }\r\n    }\r\n\r\n\r\n    setErrorMessages((messages) => ({\r\n      ...messages,\r\n      [formElement.id]: errorMessage,\r\n    }));\r\n  }\r\n\r\n  function handleChangeRegister(event) {\r\n    const formElement = event.target;\r\n    setErrorResMessage(\"\");\r\n    setDataForm((dataForm) => ({\r\n      ...dataForm,\r\n      [formElement.id]: formElement.value,\r\n    }));\r\n    validateFormFields(formElement);\r\n  }\r\n\r\n  function registerUser(dataForm) {\r\n    setErrorResMessage(\"\");\r\n    setIsSubmitBtnDisabled(true);\r\n    setStatePreloader(true);\r\n    apiMain\r\n      .register(dataForm)\r\n      .then((data) => {\r\n        apiMain\r\n          .authorization({ email: dataForm.email, password: dataForm.password })\r\n          .then((data) => {\r\n            setLoggedIn(true);\r\n            localStorage.setItem(\"token\", data.token);\r\n            apiMain\r\n              .getUserInfo(data.token)\r\n              .then((userData) => {\r\n                setCurrentUser({ name: userData.name, email: userData.email });\r\n                setIsSubmitBtnDisabled(false);\r\n              })\r\n              .catch((error) => console.log(error.status, error.errorMessage));\r\n            navigate('/movies');\r\n          })\r\n          .catch((error) => {\r\n            setSentDataForm({ email: dataForm.email, name: dataForm.name })\r\n            setIsSubmitBtnDisabled(false);\r\n            console.log(error.status, error.errorMessage);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        if (error.status === 409 && error.message === 'Пользователь с таким email уже зарегистрирован') {\r\n          setErrorResMessage(error.message);\r\n        }\r\n        else {\r\n          setErrorResMessage(error.message);\r\n        }\r\n        setIsActiveSubmitButton(false);\r\n        setIsSubmitBtnDisabled(false);\r\n        setSentDataForm({ email: dataForm.email, name: dataForm.name });\r\n      })\r\n      .finally(() => {\r\n        setStatePreloader(false);\r\n        setIsSubmitBtnDisabled(false);\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkActivateSubmitButton();\r\n  }, [dataForm, errorResMessage]);\r\n\r\n  useEffect(() => {\r\n    if (props.loggedIn) {\r\n      navigate(\"/movies\");\r\n    }\r\n  }, [props.loggedIn]);\r\n\r\n  //js\r\n  return (\r\n    <div className=\"page__container page__container-auth\">\r\n      <Header />\r\n      <main className=\"content auth\">\r\n        <section className=\"register\">\r\n          <form\r\n            action=\"#\"\r\n            className=\"register-form\"\r\n            onSubmit={handleSubmitRegister}\r\n            noValidate\r\n            method=\"POST\"\r\n          >\r\n            <InputField\r\n              id=\"name\"\r\n              title=\"Имя\"\r\n              type=\"text\"\r\n              placeholder=\"Введите имя\"\r\n              minLength=\"2\"\r\n              maxLength=\"30\"\r\n              errorMessage={errorMessages.name}\r\n              disabled={!isActiveInputField}\r\n              value={dataForm.name || \"\"}\r\n              onChange={handleChangeRegister}\r\n            />\r\n            <InputField\r\n              id=\"email\"\r\n              title=\"E-mail\"\r\n              type=\"text\"\r\n              placeholder=\"Введите e-mail\"\r\n              errorMessage={errorMessages.email}\r\n              disabled={!isActiveInputField}\r\n              value={dataForm.email || \"\"}\r\n              onChange={handleChangeRegister}\r\n            />\r\n            <InputField\r\n              id=\"password\"\r\n              title=\"Пароль\"\r\n              type=\"password\"\r\n              placeholder=\"Введите пароль\"\r\n              errorMessage={errorMessages.password}\r\n              disabled={!isActiveInputField}\r\n              value={dataForm.password || \"\"}\r\n              onChange={handleChangeRegister}\r\n              minLength=\"3\"\r\n            />\r\n            {errorResMessage.length > 0 && <span className=\"input-field__error-message input-field__text active\">{errorResMessage}</span>}\r\n            {isActivePreloader && <Preloader />}\r\n            <div className=\"register-form__button\">\r\n              <SubmitButton\r\n                title={\"Зарегистрироваться\"}\r\n                isActive={isActiveSubmitButton}\r\n                errorMessage={errorResMessage}\r\n                isSubmitBtnDisabled={isSubmitBtnDisabled}\r\n              />\r\n              <FormNavigation\r\n                questionText={\"Уже зарегистрированы?\"}\r\n                linkText={\"Войти\"}\r\n                linkTo={\"/signin\"}\r\n              />\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Header\\Menu\\Menu.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\Profile\\Profile.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\Login\\Login.jsx",["220","221"],[],"import { useState, useEffect, useContext, React } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport InputField from \"../InputField/InputField\";\r\nimport SubmitButton from \"../SubmitButton/SubmitButton\";\r\nimport Header from \"../../Header/Header\";\r\nimport FormNavigation from '../FormNavigation/FormNavigation'\r\nimport apiMain from \"../../../utils/ApiMain\";\r\nimport { EMAIL_REGEX } from \"../../../utils/Constants\";\r\nimport { PreloaderContext } from \"../../../contexts/PreloaderContext\";\r\nimport Preloader from \"../../Movies/Preloader/Preloader\";\r\nimport { CurrentUserContext } from \"../../../contexts/CurrentUserContext\";\r\n\r\nfunction Login(props) {\r\n  const navigate = useNavigate();\r\n  const { setLoggedIn } = props;\r\n  const [dataForm, setDataForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isActiveInputField, setIsActiveInputField] = useState(true);\r\n  const [errorMessages, setErrorMessages] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errorResMessage, setErrorResMessage] = useState(\"\");\r\n  const { isActivePreloader, setStatePreloader } = useContext(PreloaderContext);\r\n  const { setCurrentUser } = useContext(CurrentUserContext);\r\n\r\n  const [isSubmitBtnDisabled, setIsSubmitBtnDisabled] = useState(true); \r\n\r\n  function handleSubmitRegister(event) {\r\n    event.preventDefault();\r\n    setIsActiveInputField(false);\r\n    loginUser(dataForm);\r\n    setIsActiveInputField(true);\r\n  }\r\n\r\n  function checkActivateSubmitButton() {\r\n    const hasEmptyField = Object.values(dataForm).some((value) => value === \"\");\r\n    const hasError = Object.values(errorMessages).some(\r\n      (message) => message !== \"\"\r\n    );\r\n    if (!hasEmptyField && !hasError && errorResMessage.length === 0) {\r\n      setIsSubmitBtnDisabled(false);\r\n    } else {\r\n      setIsSubmitBtnDisabled(true);\r\n    }\r\n  }\r\n\r\n  function validateFormFields(formElement) {\r\n    let errorMessage = \"\";\r\n    if (formElement.id === \"email\") {\r\n      const emailRegex = EMAIL_REGEX; // Проверка валидности мыла\r\n      if (!emailRegex.test(formElement.value)) {\r\n        errorMessage = \"Указан некорректный e-mail\";\r\n      }\r\n    } else {\r\n      if (!formElement.validity.valid) {\r\n        errorMessage = formElement.validationMessage.split(\".\")[0];\r\n      }\r\n    }\r\n\r\n    setErrorMessages((messages) => ({\r\n      ...messages,\r\n      [formElement.id]: errorMessage,\r\n    }));\r\n  }\r\n\r\n  function handleChangeLogin(event) {\r\n    const formElement = event.target;\r\n    setErrorResMessage(\"\");\r\n    setDataForm((dataForm) => ({\r\n      ...dataForm,\r\n      [formElement.id]: formElement.value,\r\n    }));\r\n    validateFormFields(formElement);\r\n  }\r\n\r\n  useEffect(() => {\r\n    checkActivateSubmitButton();\r\n  }, [dataForm, errorResMessage]);\r\n\r\n  console.log(errorResMessage);\r\n\r\n  useEffect(() => {\r\n    if (props.loggedIn) {\r\n      navigate(\"/movies\");\r\n    }\r\n  }, [props.loggedIn]); //если добавить navigate  в массив то ошибка уйдет!!! попробовать!!! [props.loggedIn, navigate])\r\n\r\n  function loginUser(dataForm) {\r\n    setIsSubmitBtnDisabled(true);\r\n    setStatePreloader(true);\r\n    apiMain\r\n      .authorization({ email: dataForm.email, password: dataForm.password })\r\n      .then((data) => {\r\n        setLoggedIn(true);\r\n        localStorage.setItem(\"token\", data.token);\r\n        apiMain\r\n          .getUserInfo(data.token)\r\n          .then((userData) => {\r\n            setCurrentUser({ name: userData.name, email: userData.email });\r\n          })\r\n          .catch((error) => console.log(error.status, error.errorMessage));\r\n        navigate(\"/movies\");\r\n      })\r\n      .catch((error) => {\r\n        setErrorResMessage(error.message);\r\n\r\n      })\r\n      .finally(() => {\r\n        setStatePreloader(false);\r\n        setIsSubmitBtnDisabled(false);\r\n      });\r\n  }\r\n\r\n  //js\r\n  return (\r\n    <div className=\"page__container page__container-auth\">\r\n      <Header />\r\n      <main className=\"content auth\">\r\n        <section className=\"login\">\r\n          <form\r\n            action=\"#\"\r\n            className=\"login-form\"\r\n            onSubmit={handleSubmitRegister}\r\n            noValidate\r\n            method=\"POST\"\r\n          >\r\n            <InputField\r\n              id=\"email\"\r\n              title=\"E-mail\"\r\n              type=\"text\"\r\n              placeholder=\"pochta@yandex.ru\"\r\n              errorMessage={errorMessages.email}\r\n              disabled={!isActiveInputField}\r\n              value={dataForm.email || \"\"}\r\n              onChange={handleChangeLogin}\r\n            />\r\n            <InputField\r\n              id=\"password\"\r\n              title=\"Пароль\"\r\n              type=\"password\"\r\n              placeholder=\"Введите пароль\"\r\n              errorMessage={errorMessages.password}\r\n              disabled={!isActiveInputField}\r\n              value={dataForm.password || \"\"}\r\n              onChange={handleChangeLogin}\r\n              minLength=\"3\"\r\n            />\r\n            {errorResMessage.length > 0 && <span className=\"input-field__error-message input-field__text active\">{errorResMessage}</span>}\r\n            {isActivePreloader && <Preloader />}\r\n            <div className=\"login-form__button\">\r\n              <SubmitButton\r\n                title=\"Войти\"\r\n                isSubmitBtnDisabled={isSubmitBtnDisabled}\r\n                errorMessage={errorResMessage}\r\n              />\r\n              <FormNavigation\r\n                questionText={\"Ещё не зарегистрированы?\"}\r\n                linkText={\"Регистрация\"}\r\n                linkTo={\"/signup\"}\r\n              />\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Header\\Header.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Footer\\Footer.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\SearchForm\\SearchForm.jsx",["222","223","224"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport \"./SearchForm.css\";\r\nimport Checkboxfilter from \"./Checkboxfilter/Checkboxfilter\";\r\nimport { VisibleRowsContext } from \"../../../contexts/VisibleRowsContext\";\r\n\r\nfunction SearchForm({\r\n  onSearch,\r\n  errorMessage,\r\n  setErrorMessage,\r\n  setCheckboxfilterMode,\r\n  checkboxfilterMode,\r\n  searchQuery,\r\n  setSearchQuery,\r\n  localStorageName,\r\n  isSaved\r\n}) {\r\n  const [errorMessageNotFound, setErrorMessageNotFound] = useState(\"\");\r\n  const location = useLocation();\r\n\r\n  const {resetVisibleRowsContext} = useContext(VisibleRowsContext);\r\n\r\n  function handleCheckbox() {\r\n    setCheckboxfilterMode(!checkboxfilterMode);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/saved-movies\") {\r\n      setSearchQuery(\"\");\r\n      setCheckboxfilterMode(false);\r\n    }\r\n  }, [location.pathname, setCheckboxfilterMode]);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery !== \"\" || isSaved) {\r\n      onSearch();\r\n    }\r\n  }, [isSaved, checkboxfilterMode]); //добавить после поиск сразу после ввода - зависимость от query - удалить\r\n\r\n\r\n  const handleChangeInput = (event) => {\r\n    event.preventDefault();\r\n    const value = event.target.value;\r\n    setErrorMessageNotFound(\"\");\r\n    setErrorMessage(\"\");\r\n    setSearchQuery(value);\r\n  };\r\n\r\n  const handleSearch = (event) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n    setErrorMessageNotFound(\r\n      (searchQuery === \"\" && !isSaved) ? \"Введите запрос\" : \"\"\r\n    );\r\n    if (searchQuery !== \"\" || isSaved) {\r\n      onSearch();\r\n      resetVisibleRowsContext();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const optionsLocalCopy = JSON.parse(localStorage.getItem(\"options-beatfilm-movies\"));\r\n    if (optionsLocalCopy && !isSaved) {\r\n      setCheckboxfilterMode(\r\n        optionsLocalCopy.checkboxfilterMode ? optionsLocalCopy.checkboxfilterMode : false\r\n      );\r\n      setSearchQuery(\r\n        optionsLocalCopy.searchQuery ? optionsLocalCopy.searchQuery : \"\"\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"search-form\">\r\n      <form className=\"search-form__search-container\" onSubmit={handleSearch} noValidate>\r\n        <div className=\"search-form__container\">\r\n          <input\r\n            className=\"search-form__input-field\"\r\n            type=\"text\"\r\n            placeholder=\"Фильм\"\r\n            value={searchQuery}\r\n            onChange={handleChangeInput}\r\n            required\r\n          ></input>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"search-form__search-btn link\"\r\n          ></button>\r\n        </div>\r\n      </form>\r\n      <div className=\"search-form__checkboxfilter-container\">\r\n        <Checkboxfilter onChecked={handleCheckbox} isChecked={checkboxfilterMode} />\r\n        <span className=\"search-form__checkboxfilter-text\">Короткометражки</span>\r\n      </div>\r\n      <span className=\"search-form__error-text\">\r\n        {errorMessage === \"\" ? errorMessageNotFound : errorMessage}\r\n      </span>\r\n    </section>\r\n  );\r\n}\r\n//switcherMode заменить на Checkboxfilter к примеру!!!\r\nexport default SearchForm;\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\MoviesCardList\\MoviesCardList.jsx",["225"],[],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./MoviesCardList.css\";\r\nimport MoviesCard from \"../MoviesCard/MoviesCard\";\r\nimport { VisibleRowsContext } from \"../../../contexts/VisibleRowsContext\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction MoviesCardList({ movies, isActive, loadMoreButtomMove }) {\r\n  const {\r\n    addRows,\r\n    cardCount,\r\n    setCardCount,\r\n    movieCardStartColumns,\r\n  } = useContext(VisibleRowsContext);\r\n\r\n\r\n  const [visibleCards, setVisibleCards] = useState([]);\r\n\r\n  const {pathname} = useLocation()\r\n\r\n  const calculateColumns = () => {\r\n    const { columns, rows } = movieCardStartColumns();\r\n    const requiredCardCount = columns * rows;\r\n    setCardCount(requiredCardCount);\r\n  };\r\n\r\n   useEffect(() => {\r\n\r\n      calculateColumns();\r\n      window.addEventListener(\"resize\", calculateColumns);\r\n      return () => {\r\n        window.removeEventListener(\"resize\", calculateColumns);\r\n      };\r\n\r\n  }, [window.innerWidth]);\r\n\r\n\r\n  const loadMoreCards = () => {\r\n    const {columns} = movieCardStartColumns();\r\n    const size = window.innerWidth >= 1200 || window.innerWidth >= 584 // Проверка значения экрана bool\r\n    setCardCount((prevCount) => size ? prevCount + columns : prevCount + columns * 2);\r\n    addRows();\r\n  };\r\n  \r\n  useEffect(() => {\r\n    setVisibleCards(!loadMoreButtomMove ? movies : movies.slice(0, cardCount));\r\n  }, [cardCount, loadMoreButtomMove, movies]);\r\n\r\n\r\n  return (\r\n    <section\r\n      className={`movies-card-list ${cardCount < movies.length ? \"\" : \"movies-card-list_padding\"\r\n        } ${isActive ? \"disabled\" : \"\"}`} //js movies.length поменять на cards попробуй два места (смотри ниже)\r\n    >\r\n      <ul className=\"movies-card-list__container\">\r\n        {visibleCards.length > 0 &&\r\n          visibleCards.map((movie, index) => (\r\n            <MoviesCard\r\n              key={movie.movieId}\r\n              movieId={movie.movieId}\r\n              title={movie.title}\r\n              duration={movie.duration}\r\n              backdrop={movie.backdrop}\r\n              trailerLink={movie.trailerLink}\r\n            />\r\n          ))}\r\n      </ul>\r\n      {cardCount < movies.length && (\r\n        <>\r\n          {pathname === '/saved-movies' ? null : (\r\n            <button\r\n              type=\"button\"\r\n              className=\"movies-card-list__button link\"\r\n              onClick={loadMoreCards}\r\n            >\r\n            Ещё\r\n            </button>\r\n          )}\r\n        </>\r\n      )}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MoviesCardList;\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\NavTab\\NavTab.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\Techs\\Techs.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\Landing\\Landing.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\AboutProject\\AboutProject.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\utils\\Constants.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\Preloader\\Preloader.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\AboutMe\\AboutMe.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\FormNavigation\\FormNavigation.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\InputField\\InputField.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Auth\\SubmitButton\\SubmitButton.jsx",["226"],[],"import React, { useState } from \"react\";\r\n\r\nimport \"./SubmitButton.css\";\r\n\r\nfunction SubmitButton({ title, errorMessage, inActive, isSubmitBtnDisabled }) {\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        type=\"submit\"\r\n        className={`submit-button link ${isSubmitBtnDisabled ? \"submit-button_inactive\" : \"\"\r\n          }`}\r\n        disabled={isSubmitBtnDisabled}\r\n      >\r\n        {title}\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SubmitButton;\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Header\\ProfileButton\\ProfileButton.jsx",["227"],[],"import \"./ProfileButton.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nfunction ProfileButton() {\r\n  const location = useLocation();\r\n\r\n  const [isTouch, setIsTouch] = useState(location.pathname === \"/\"); //js\r\n  useEffect(() => {\r\n    setIsTouch(location.pathname === \"/\");\r\n  }, [location.pathname]);\r\n\r\n  return (\r\n    <div className=\"profile-btn button-style\">\r\n      <Link to=\"/profile\" className={`profile-btn__link link `}>\r\n        Аккаунт\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileButton;\r\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\hooks\\usePopupClose.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Header\\HeaderMain\\HeaderMain.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\SearchForm\\Checkboxfilter\\Checkboxfilter.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Movies\\MoviesCard\\MoviesCard.jsx",["228"],[],"import React, { useState, useContext, useEffect } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport error404 from \"../../../images/404.png\";\nimport \"./MoviesCard.css\";\nimport { MovieContext } from \"../../../contexts/MovieContext\";\n\nfunction MoviesCard({ movieId, title, duration, backdrop, trailerLink }) {\n  const [favourites, setFavourites] = useState(false);\n  const { addSavedMovie, delSavedMovie, savedMovies, movies } = useContext(MovieContext);\n  const location = useLocation();\n  const [isFavoritesRoute, setIsFavoritesRoute] = useState(\n    location.pathname === \"/saved-movies\"\n  );\n\n  const [imageError, setImageError] = useState(false);\n\n  const handleImageError = () => {\n    setImageError(true);\n  };\n\n  useEffect(() => {\n    if (!isFavoritesRoute) {\n      if (savedMovies) {\n        const isFavorite = savedMovies.some(movie => movie.movieId === movieId);\n        setFavourites(isFavorite);\n      }\n    }\n  }, [savedMovies, movies, isFavoritesRoute, movieId]);\n\n  function handleClick(event) {\n    event.preventDefault();\n    if (favourites) {\n      delSavedMovie(movieId);\n    } else {\n      addSavedMovie(movieId);\n    }\n    setFavourites(!favourites);\n  }\n\n  function handleDelMovie(event) {\n    event.preventDefault();\n    delSavedMovie(movieId);\n    setFavourites(false);\n  }\n\n  useEffect(() => {\n    setIsFavoritesRoute(location.pathname === \"/saved-movies\");\n  }, [location.pathname]);\n\n  function convertTime(duration) {\n    const minutes = duration % 60;\n    const hours = Math.floor(duration / 60);\n    return (hours === 0 ? `${minutes}м` : minutes === 0 ? `${hours}ч` : `${hours}ч ${minutes}м`)\n  }\n\n  return (\n    <li className=\"movies-card\">\n      <Link\n        className=\"movies-card__link\"\n\n        target=\"_blank\"\n      ></Link>\n      {imageError ? (\n        <img\n          className=\"movies-card__backdrop\"\n          src={error404}\n          alt=\"not found\"\n        />\n      ) : (\n        <a\n          className=\"movies-card__link\"\n          href={trailerLink}\n          target=\"_blank\"\n        >\n            <img\n            className=\"movies-card__backdrop\"\n            src={backdrop}\n            alt={`Кадр из фильма: ${title}`}\n            onError={handleImageError}\n        />\n        </a>\n      )}\n      <div className=\"movies-card__container\">\n        <div className=\"movies-card__wrapper\">\n          <h2 className=\"movies-card__title\">{title}</h2>\n\n          {!isFavoritesRoute && (\n            <button\n              className={`movies-card__favorites-btn link ${favourites ? \"active\" : \"\"\n                }`}\n              type=\"button\"\n              onClick={handleClick}\n            ></button>\n          )}\n          {isFavoritesRoute && (\n            <button\n              className={`movies-card__favorites-btn link remove-btn`}\n              type=\"button\"\n              onClick={handleDelMovie}\n            ></button>\n          )}\n        </div>\n      </div>\n      <span className=\"movies-card__duration\">\n        {convertTime(duration)}\n      </span>\n    </li>\n  );\n}\n\nexport default MoviesCard;\n","C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Header\\SectionHeader\\SectionHeader.jsx",[],[],"C:\\Users\\linar\\praktikumLenovo\\diplom\\movies-explorer-frontend\\src\\components\\Main\\Portfolio\\Portfolio.jsx",[],[],{"ruleId":"229","severity":1,"message":"230","line":182,"column":9,"nodeType":"231","messageId":"232","endLine":182,"endColumn":20},{"ruleId":"233","severity":1,"message":"234","line":30,"column":6,"nodeType":"235","endLine":30,"endColumn":8,"suggestions":"236"},{"ruleId":"233","severity":1,"message":"237","line":30,"column":6,"nodeType":"235","endLine":30,"endColumn":8,"suggestions":"238"},{"ruleId":"229","severity":1,"message":"239","line":84,"column":9,"nodeType":"231","messageId":"232","endLine":84,"endColumn":32},{"ruleId":"233","severity":1,"message":"240","line":24,"column":6,"nodeType":"235","endLine":24,"endColumn":8,"suggestions":"241"},{"ruleId":"242","severity":1,"message":"243","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":27},{"ruleId":"242","severity":1,"message":"246","line":29,"column":10,"nodeType":"244","messageId":"245","endLine":29,"endColumn":22},{"ruleId":"233","severity":1,"message":"247","line":138,"column":6,"nodeType":"235","endLine":138,"endColumn":33,"suggestions":"248"},{"ruleId":"233","severity":1,"message":"249","line":144,"column":6,"nodeType":"235","endLine":144,"endColumn":22,"suggestions":"250"},{"ruleId":"233","severity":1,"message":"247","line":82,"column":6,"nodeType":"235","endLine":82,"endColumn":33,"suggestions":"251"},{"ruleId":"233","severity":1,"message":"249","line":90,"column":6,"nodeType":"235","endLine":90,"endColumn":22,"suggestions":"252"},{"ruleId":"233","severity":1,"message":"253","line":33,"column":6,"nodeType":"235","endLine":33,"endColumn":48,"suggestions":"254"},{"ruleId":"233","severity":1,"message":"255","line":39,"column":6,"nodeType":"235","endLine":39,"endColumn":35,"suggestions":"256"},{"ruleId":"233","severity":1,"message":"257","line":73,"column":6,"nodeType":"235","endLine":73,"endColumn":8,"suggestions":"258"},{"ruleId":"233","severity":1,"message":"259","line":34,"column":6,"nodeType":"235","endLine":34,"endColumn":25,"suggestions":"260"},{"ruleId":"242","severity":1,"message":"261","line":1,"column":17,"nodeType":"244","messageId":"245","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"262","line":8,"column":10,"nodeType":"244","messageId":"245","endLine":8,"endColumn":17},{"ruleId":"263","severity":1,"message":"264","line":70,"column":9,"nodeType":"265","messageId":"266","endLine":74,"endColumn":10,"fix":"267"},"no-dupe-keys","Duplicate key 'savedMovies'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleCheckToken'. Either include it or remove the dependency array.","ArrayExpression",["268"],"React Hook useEffect has a missing dependency: 'saveSavedMovies'. Either include it or remove the dependency array.",["269"],"Duplicate key 'resetVisibleRowsContext'.","React Hook useEffect has missing dependencies: 'downloudsMovies' and 'handleSearch'. Either include them or remove the dependency array.",["270"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'sentDataForm' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkActivateSubmitButton'. Either include it or remove the dependency array.",["271"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["272"],["273"],["274"],"React Hook useEffect has a missing dependency: 'setSearchQuery'. Either include it or remove the dependency array. If 'setSearchQuery' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["275"],"React Hook useEffect has missing dependencies: 'onSearch' and 'searchQuery'. Either include them or remove the dependency array. If 'onSearch' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["276"],"React Hook useEffect has missing dependencies: 'isSaved', 'setCheckboxfilterMode', and 'setSearchQuery'. Either include them or remove the dependency array. If 'setCheckboxfilterMode' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["277"],"React Hook useEffect has a missing dependency: 'calculateColumns'. Either include it or remove the dependency array. Outer scope values like 'window.innerWidth' aren't valid dependencies because mutating them doesn't re-render the component.",["278"],"'useState' is defined but never used.","'isTouch' is assigned a value but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"279","text":"280"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},{"desc":"287","fix":"291"},{"desc":"289","fix":"292"},{"desc":"293","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"299","fix":"300"},[2043,2043]," rel=\"noreferrer\"","Update the dependencies array to be: [handleCheckToken]",{"range":"301","text":"302"},"Update the dependencies array to be: [saveSavedMovies]",{"range":"303","text":"304"},"Update the dependencies array to be: [downloudsMovies, handleSearch]",{"range":"305","text":"306"},"Update the dependencies array to be: [checkActivateSubmitButton, dataForm, errorResMessage]",{"range":"307","text":"308"},"Update the dependencies array to be: [navigate, props.loggedIn]",{"range":"309","text":"310"},{"range":"311","text":"308"},{"range":"312","text":"310"},"Update the dependencies array to be: [location.pathname, setCheckboxfilterMode, setSearchQuery]",{"range":"313","text":"314"},"Update the dependencies array to be: [isSaved, checkboxfilterMode, searchQuery, onSearch]",{"range":"315","text":"316"},"Update the dependencies array to be: [isSaved, setCheckboxfilterMode, setSearchQuery]",{"range":"317","text":"318"},"Update the dependencies array to be: [calculateColumns]",{"range":"319","text":"320"},[1330,1332],"[handleCheckToken]",[1023,1025],"[saveSavedMovies]",[1059,1061],"[downloudsMovies, handleSearch]",[4742,4769],"[checkActivateSubmitButton, dataForm, errorResMessage]",[4863,4879],"[navigate, props.loggedIn]",[2745,2772],[2901,2917],[895,937],"[location.pathname, setCheckboxfilterMode, setSearchQuery]",[1037,1066],"[isSaved, checkboxfilterMode, searchQuery, onSearch]",[2062,2064],"[isSaved, setCheckboxfilterMode, setSearchQuery]",[973,992],"[calculateColumns]"]